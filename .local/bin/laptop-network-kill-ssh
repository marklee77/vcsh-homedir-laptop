#!/bin/bash
scriptname="$(basename "${BASH_SOURCE[0]}")"
rundir="${XDG_RUNTIME_DIR:-${HOME}/.local/var/run}/${scriptname}"
pidfile="${rundir}/PID"
cleanup () {
    rm -f "${pidfile}"
    flock -u 200
}
mkdir -p "${rundir}"
exec 200>"${pidfile}"
if ! flock -n 200 || ! echo "$$" > "${pidfile}"; then
    echo "another instance of the ${scriptname} is currently running..." >&2
    exit 1
fi
trap cleanup EXIT HUP INT QUIT TERM
scriptdir="$(dirname "${BASH_SOURCE[0]}")"
export PATH="${scriptdir}:$PATH"

prev_network="$(cat "${rundir}/network" 2>/dev/null)"
curr_network="$((ip a s eth0 ; ip a s wlan0 ; ip a s usb0) | sed -nr '/^\s*inet ([^/]*).*/{s//\1/p;q}')"

ssh_procs="$(pgrep -f "^ssh: .*ssh_control_")"

if [ -z "$curr_network" ] || [ "$curr_network" != "$prev_network" ]; then
    for proc in $ssh_procs; do
        if grep -q "^$proc\$" "${rundir}/ssh_procs"; then
            kill "${proc}" 2>/dev/null
        fi
    done
fi

echo "$curr_network" > "${rundir}/network"
echo "$ssh_procs" > "${rundir}/ssh_procs"

exit 0
