#!/bin/bash
params=$*

scriptname="$(basename $0)"

lockdir="${HOME}/.local/var/lock/${scriptname}"
pidfile="${lockdir}/PID"
if mkdir ${lockdir} &> /dev/null; then
    trap "rm -rf ${lockdir}; exit 0" EXIT SIGHUP SIGINT SIGQUIT SIGTERM
    echo "$$" > ${pidfile}
else
    otherpid=$(cat ${pidfile} 2>/dev/null)
    othercmd=$(ps --no-headers --format command --pid ${otherpid} 2>/dev/null)
    if [[ "${othercmd}" =~ .*${scriptname}.* ]]; then
        echo "another instance of ${scriptname} is currently running." >&2
        exit 1
    fi
    # lock is stale, remove and try again...
    rm -rf ${lockdir}
    exec "$0" "$@"
fi

#logfile="${HOME}/.local/var/log/${scriptname}.log"
#exec 1>${logfile}
#exec 2>&1

inputs=($(xinput | grep -v XTEST | perl -ne 'print "$1\n" if /id=(\d+).*slave\s+pointer/' | sort -n))
if [ "${#inputs[@]}" -lt 1 ]; then
    exit 0
fi

if [ "$1" == "on" ]; then
    subcommand="enable"
elif [ "$1" == "off" ]; then
    subcommand="disable"
else
    state=$(xinput list-props ${inputs[0]} | perl -ne 'print $1 if /Device Enabled .*:\s*(\d+)/')
    if [ "$state" = 1 ]; then
        subcommand="disable"
    else
        subcommand="enable"
    fi
fi

if [ -n "$subcommand" ]; then
    for input in ${inputs[@]}; do
        xinput $subcommand $input
    done
fi
