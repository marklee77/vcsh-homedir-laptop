#!/bin/bash
SCREEN_LAYOUTS=(left-of right-of mirror)

SCRIPTNAME="$(basename $0)"
LOCKDIR="${HOME}/.local/var/lock/${SCRIPTNAME}"
PIDFILE="${LOCKDIR}/PID"
if mkdir ${LOCKDIR} &> /dev/null; then
    trap "rm -rf ${LOCKDIR}; exit 0" EXIT SIGHUP SIGINT SIGQUIT SIGTERM
    echo "$$" > ${PIDFILE}
else
    OTHERPID=$(cat ${PIDFILE})
    OTHERNAME=$(basename $(ps aux | perl -ane "print \"\$F[11]\\n\" if (\$F[1] == ${OTHERPID});" 2>/dev/null) 2>/dev/null)
    if [ -n "${OTHERPID}" ] && [ "${OTHERNAME}" != "${SCRIPTNAME}" ]; then
        # lock is stale, remove and try again...
        rm -rf ${LOCKDIR}
        exec "$0" "$@"
    fi
    echo "another instance of ${SCRIPTNAME} is currently running." >&2
    exit 1
fi

RUNDIR="${HOME}/.local/var/run/${SCRIPTNAME}"
mkdir -p ${RUNDIR}
CURRENT_LAYOUT=$(cat ${RUNDIR}/layout 2>/dev/null)
[ -z "${CURRENT_LAYOUT}" ] && CURRENT_LAYOUT=${SCREEN_LAYOUTS[0]}

if [ "$1" = "--nocycle" ]; then
    NEW_LAYOUT="${CURRENT_LAYOUT}"
else
    i=0
    for LAYOUT in ${SCREEN_LAYOUTS[@]}; do
        i=$((($i + 1) % ${#SCREEN_LAYOUTS[@]}))
        [ "${LAYOUT}" = "${CURRENT_LAYOUT}" ] && break
    done
    NEW_LAYOUT=${SCREEN_LAYOUTS[$i]}
fi
laptop-screen-set-layout ${NEW_LAYOUT}
echo $NEW_LAYOUT > ${RUNDIR}/layout
