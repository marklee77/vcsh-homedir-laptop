#!/bin/bash
scriptname="$(basename "${BASH_SOURCE[0]}")"
rundir="${XDG_RUNTIME_DIR:-${HOME}/.local/var/run}/${scriptname}"
pidfile="${rundir}/PID"
cleanup () {
    rm -f "${pidfile}"
    flock -u 200
}
mkdir -p "${rundir}"
exec 200>"${pidfile}"
if ! flock -n 200 || ! echo "$$" > "${pidfile}"; then
    echo "another instance of the ${scriptname} is currently running..." >&2
    exit 1
fi
trap cleanup EXIT HUP INT QUIT TERM
scriptdir="$(dirname "${BASH_SOURCE[0]}")"
export PATH="${scriptdir}:$PATH"

# disable temporarily because displaylink is being a pain
exit 0

xrandr="/usr/bin/xrandr"

laptop_screen_name="$(xrandr --current | awk '$2 == "connected" { print $1; exit }')"
lid_state="$(awk '{ print $2 }' /proc/acpi/button/lid/LID*/state | head -1)"
layout="$1"

if [ -n "${layout}" ]; then
    case "${layout}" in
        mirror|left-of|right-of|above|below|off)
        ;;
        *)
        echo "usage:"
        echo "${scriptname} [mirror|left-of|right-of|above|below|off]"
        exit 1
        ;;
    esac
fi

output_status_list="$(xrandr --current | perl -ne 'if (/(\S+)\s+connected/) { print "\n$1," } elsif (/^\s+(\d+x\d+)\s/) { print "$1;" }')"

if [ "$layout" = "mirror" ]; then
    global_available_modes=""
    for output_status in ${output_status_list}; do
        IFS="," read -r output_name output_available_modes <<< "${output_status}"
        if [ "${lid_state}" = "open" ] || [ "${output_name}" != "${laptop_screen_name}" ]; then
            output_available_modes="${output_available_modes//;/ }"
            if [ -z "${global_available_modes}" ]; then
                global_available_modes="${output_available_modes}"
            else
                temp_available_modes=""
                for gmode in ${global_available_modes}; do
                    for omode in ${output_available_modes}; do
                        if [ "${omode}" = "${gmode}" ]; then
                            temp_available_modes="${temp_available_modes} ${omode}"
                            break
                        fi
                    done
                done
                global_available_modes="${temp_available_modes}"
            fi
        fi
    done
    global_preferred_mode="$(awk '{ print $1 }' <<< "${global_available_modes}")"
fi

xrandr_options=""
previous_output=""
for output_status in $output_status_list; do
    IFS="," read -r output_name output_available_modes <<< "${output_status}"
    output_desired_mode="$(awk '{ print $1 }' <<< "${output_available_modes//;/ }")"
    output_options=""
    if [ "${lid_state}" = "open" ] || [ "${output_name}" != "${laptop_screen_name}" ]; then
        if [ -z "${previous_output}" ]; then
            output_options="--primary"
        fi
        if [ "${layout}" = "mirror" ]; then
            if [ -n "${global_preferred_mode}" ]; then
                output_desired_mode="${global_preferred_mode}"
            fi
            if [ -n "${previous_output}" ]; then
                output_options="--same-as ${previous_output}"
            fi
        elif [ "${layout}" = "off" ]; then
            if [ -n "${previous_output}" ]; then
                output_options="--off"
            fi
        elif [ -n "${layout}" ]; then
            if [ -n "${previous_output}" ]; then
                output_options="--${layout} ${previous_output}"
            fi
        fi
        if [ "${layout}" != "off" ] || [ -z "${previous_output}" ]; then
            output_options="--auto --mode ${output_desired_mode} ${output_options}"
        fi
        previous_output="${output_name}"
    else
        output_options="--off"
    fi
    if [ -n "${output_options}" ]; then
        xrandr_options="${xrandr_options} --output ${output_name} ${output_options}"
    fi
done

if [ -n "${xrandr_options}" ]; then
    xrandr_command="${xrandr}${xrandr_options}"
    previous_xrandr_command=$(cat "${rundir}/xrandr_command" 2>/dev/null)
    if  [ "${xrandr_command}" != "${previous_xrandr_command}" ]; then
        echo "${xrandr_command}" > "${rundir}/xrandr_command"
        ${xrandr_command}
        laptop-set-background
        laptop-keyboard-set-layout
    fi
else
    rm -f "${rundir}/xrandr_command"
fi

exit 0
