#!/bin/bash
scriptname="$(basename "${BASH_SOURCE[0]}")"
rundir="${XDG_RUNTIME_DIR:-${HOME}/.local/var/run}/${scriptname}"
pidfile="${rundir}/PID"
cleanup () {
    rm -f "${pidfile}"
    flock -u 200
}
mkdir -p "${rundir}"
exec 200>"${pidfile}"
if ! flock -n 200 || ! echo "$$" > "${pidfile}"; then
    echo "another instance of the ${scriptname} is currently running..." >&2
    exit 1
fi
trap cleanup EXIT HUP INT QUIT TERM
scriptdir="$(dirname "${BASH_SOURCE[0]}")"
export PATH="${scriptdir}:$PATH"

xrandr="/usr/bin/xrandr"

# laptop_screen_name defaults to first connected output, but could be set
# explicitly
laptop_screen_name=$(xrandr --current | \
                     perl -lane 'print $F[0] if $F[1] eq "connected"' | \
                     head -1)
lid_state=$(perl -ane 'print $F[1]' /proc/acpi/button/lid/LID/state)
layout="$1"

if [ -n "$layout" ]; then
    case $layout in
        mirror|left-of|right-of|above|below|off)
        ;;
        *)
        echo -e "usage:\n$0 [mirror|left-of|right-of|above|below|off]"
        exit 1
        ;;
    esac
fi

output_status_list=$(xrandr --current | perl -ane 'if (/(\S+)\s+((?:dis)?connected)\s*((?:primary)?)\s*([^\s(+]*)/) { print "\n$1,$2,$3,$4,"; } elsif (/^\s+(\d+x\d+)\s+[0-9.*]+(\+?)/) { print "$1$2;" };')

global_available_modes=""
num_active_outputs=0
for output_status in $output_status_list; do
    IFS="," read output_name output_state output_primary output_mode output_available_modes <<< "${output_status}"
    if [ -n "${output_available_modes}" ] && \
       [ "$output_state" = "connected" ] && \
       ([ "$output_name" != "$laptop_screen_name" ] || \
        [ "$lid_state" = "open" ]); then
        num_active_outputs=$(($num_active_outputs+1))
        if [ $num_active_outputs -eq 1 ]; then
            global_available_modes=${output_available_modes//[;+]/ }
        else
            temp_available_modes=""
            for gmode in $global_available_modes; do
                for omode in ${output_available_modes//[;+]/ }; do
                    if [ "$omode" = "$gmode" ]; then
                        temp_available_modes="$temp_available_modes $omode"
                        break
                    fi
                done
            done
            global_available_modes=$temp_available_modes
        fi
    fi
done
global_preferred_mode=$(perl -lane 'print $F[0]' <<< $global_available_modes)

xrandr_options=""
previous_connected_output=""
for output_status in $output_status_list; do
    IFS="," read output_name output_state output_primary output_mode output_available_modes <<< "${output_status}"
    output_desired_mode=$(perl -lane 'if (/(\d+x\d+)\+/) { print $1; } else { print $F[0]; }' <<< ${output_available_modes//;/ })
    output_options=""
    if [ "$output_state" = "connected" ] && ([ "$output_name" != "$laptop_screen_name" ] || [ "$lid_state" = "open" ] || [ $num_active_outputs -eq 0 ] || [ "$layout" = "off" ]); then
        if [ -z "$previous_connected_output" ]; then
            output_options="--primary"
        fi
        if [ $num_active_outputs -gt 1 ]; then
            if [ "$layout" = "mirror" ]; then
                if [ -n "$global_preferred_mode" ]; then
                    output_desired_mode=$global_preferred_mode
                fi
                if [ -n "$previous_connected_output" ]; then
                    output_options="--same-as $previous_connected_output"
                fi
            elif [ "$layout" = "off" ]; then
                if [ -n "$output_mode" ] && [ -n "$previous_connected_output" ]; then
                    output_options="--off"
                fi
            elif [ -n "$layout" ]; then
                if [ -n "$previous_connected_output" ]; then
                    output_options="--$layout $previous_connected_output"
                fi
            fi
        fi
        if [ "$layout" != "off" ] || [ -z "$previous_connected_output" ]; then
            output_options="--auto --mode $output_desired_mode $output_options"
        fi
        previous_connected_output=$output_name
    elif [ -n "$output_mode" ] || [ "$output_name" = "$laptop_screen_name" ]; then
            output_options="--off"
    fi
    if [ -n "$output_options" ]; then
        xrandr_options="$xrandr_options --output $output_name $output_options"
    fi
done

if [ -n "$xrandr_options" ]; then
    mkdir -p ${rundir}
    xrandr_command="$xrandr$xrandr_options"
    previous_xrandr_command=$(cat ${rundir}/xrandr_command 2>/dev/null)
    if  [ "$xrandr_command" != "$previous_xrandr_command" ]; then
        echo "$xrandr_command" > ${rundir}/xrandr_command
        $xrandr_command
        laptop-set-background
        laptop-keyboard-set-layout
    fi
elif [ -f "${rundir}/xrandr_command" ]; then
    rm -f ${rundir}/xrandr_command
fi

exit 0
